######################################
## Kafka Cluster Configuration File ##
######################################

[parameters General Settings]
Order = 10

    [[parameters Cloud Service Provider Configuration]]
    Description = Configure the Cloud Provider account options.
    Order = 10

        [[[parameter CloudProvider]]]
        Label = Cloud Provider
        ParameterType = Cloud.Provider

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials

        [[[parameter Region]]]
        Label = Region
        Description = Deployment Location
        ParameterType = Cloud.Region

    [[parameters Node Access]]
    Description = "Specify the credentials required for access to the node.  The Keypair Path specifies the path on local machines for cyclecloud CLI access."
    Order = 20

        [[[parameter awsKeypair]]]
        Label = AWS Keypair
        Description = The keypair to connect with
        ParameterType = AWS.Keypair
        DefaultValue = cyclecloud
        Conditions.Required := CloudProvider === "AWS"
        Conditions.Excluded := CloudProvider !== "AWS"

        [[[parameter keypairLocation]]]
        Label = Keypair Path
        Description = The path to the keypair
        DefaultValue = ~/.ssh/cyclecloud.pem
        Required = True

        [[[parameter Username]]]
        Label = Username
        Description = The username for the built-in local user on all nodes for direct ssh access.
        DefaultValue = cyclecloud
        Conditions.Required := (CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))
        Conditions.Excluded := !(CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))

        [[[parameter Password]]]
        Label = Password
        ParameterType = Password
        Description = The password for the built-in local user on all nodes for direct ssh access.
        Conditions.Required := (CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))
        Conditions.Excluded := !(CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))


[parameters Cluster Software]
Order = 20
Description = Specify the scheduling software, and base OS installed on all nodes, and optionally the cluster-init and chef versions from your Locker.

    [[parameters Software]]
    Order = 10
    
        [[[parameter ImageName]]]
        Label = Base OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = cycle.image.centos7

        [[[parameter ProjectVersion]]]
        Label = Project Version
        DefaultValue = 1.1.0
        Description = Select the Kafka project spec version
        Hidden = true

    [[parameters Zookeeper]]
    Description = Adjust the Kafka and ZooKeeper cluster size.  Ensemble Size >= 3 required for fault tolerance (max: 10).
    Order = 20

        [[[parameter EnsembleSize]]]
        Label = Ensemble Size
        Description = The number of ZooKeeper ensemble members to start initially.  (Quorum Size = ceil(EnsembleSize/2))
        DefaultValue = 3
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.MaxValue = 10
        Config.IntegerOnly = true


[parameters Compute Backend]
Order = 30

    [[parameters Instance Types]]
    Description = "The cluster, in this case, has two roles: the return proxy node and the kafka broker / zookeeper ensemble hosts. Configure which instance types to use based on the requirements of your application.  The proxy host may be used to enable firewall traversal between the cluster and CycleCloud.   In VPC environments with virtual network, this node is not required."
    Order = 10

        [[[parameter ProxyMachineType]]]
        Label = Proxy
        Description = The machine type for the optional proxy host
        ParameterType = Cloud.MachineType
            [[[[record Config.ProviderDefaults]]]]
            AWS = m3.large 
            Azure = Standard_A2
            Azure_classic = A2
            GCP = n1-standard-4


       [[[parameter BrokerMachineType]]]
       Label = Broker
       Description = The machine type for the Kafka brokers
       ParameterType = Cloud.MachineType
           [[[[record Config.ProviderDefaults]]]]
           AWS = m3.large 
           Azure = Standard_DS4_v2 
           GCP = n1-standard-4

    [[parameter EnableTerminationProtection]]
    Label = Term Protection
    DefaultValue = false
    Widget.Plugin = pico.form.BooleanCheckBox
    Widget.Label = Enable Termination Protection

    [[parameter BrokerGcpTagList]]
    Label = Tag List
    ParameterType = StringList
    Conditions.Excluded := CloudProvider !== "GCP"
    
    [[parameter ZookeeperAccessArn]]
    Label = IAM Profile
    DefaultValue := undefined
    Conditions.Excluded := CloudProvider !== "AWS"


[parameters Networking]
Order = 50

    [[parameters AWS]]
    Order = 20
    Conditions.Excluded := CloudProvider !== "AWS"
    Description = "Optional use of VPC components. Without specifying a subnet or security group the hosts will be started in the default region, VPC and security group."
    
        [[[parameter AwsProxySubnetId]]]
        Label = Proxy Subnet
        ParameterType = AWS.Subnet
        Description = The subnet ID to use when in a VPC environment.
        Conditions.Excluded := CloudProvider !== "AWS"

        [[[parameter AwsSubnetId]]]
        Label = VPC Subnets
        ParameterType = AWS.Subnet
        AutoSelect = true
        Description = The subnet ID to use when in a VPC environment.
        Conditions.Excluded := CloudProvider !== "AWS"

        [[[parameter ZookeeperSecurityGroups]]]
        Label = VPC Security Group
        Description = "The security group ID(s) to use when in a VPC environment. Can be comma-separated list for multiple security groups. eg: sg-a0000001, sg-a0000002."
        ParameterType = AWS.SecurityGroupList

    [[parameters Azure Virtual Network Configuration]]
    Order = 40
    Conditions.Excluded := CloudProvider !== "Azure"

        [[[parameter AzureSubnetId]]]
        Label = Subnet ID
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        ParameterType = Azure.Subnet
        Conditions.Required := CloudProvider === "Azure"
        Conditions.Excluded := CloudProvider !== "Azure"

    [[parameters Google Compute Network Configuration]]
    Order = 40
    Description = No custom configuration required.
    Conditions.Excluded := CloudProvider !== "GCP"



[cluster Kafka]
FormLayout = selectionpanel
IconUrl = http://download.cyclecomputing.com/logos/kafka-192x192.png

# Enable/disable autoscaling
Autoscale = false

    # defines default values used for all nodes. This is inherited automatically by all nodes.
    # You can create other nodes like this by adding Abstract = true to them and adding
    # Extends = foo to the nodes that should inherit the definitions from foo.
    [[node defaults]]
    TerminationProtection = $EnableTerminationProtection
    ImageName = $ImageName

    # Chef and Locker Config
    Credentials = $Credentials

    # Cycle Examples Repository
    Locker=cyclecloud-mirrors

    # EC2
    AWS.InstanceProfileArn=$ZookeeperAccessArn
    KeyPair = $AwsKeypair
    KeyPairLocation = $KeypairLocation
    SecurityGroups = $ZookeeperSecurityGroups

    SubnetId = ${IfThenElse(CloudProvider==="Azure", AzureSubnetId, AwsSubnetId)}

    # Azure
    Region = $Region

        [[[configuration]]]
        # You can specify Chef attributes using dot notation if needed. For example, you
        # can use it to change the default CycleServer admin password (defaults to cluster name):
        cyclecloud.cluster.user.name = kafka
        # cyclecloud.cluster.user.password = abc;123
        cyclecloud.cluster.user.uid = 55555
        cyclecloud.cluster.user.gid = 55555

        [[[cluster-init kafka:kafka:$ProjectVersion]]]

     [[node proxy]]
     IsReturnProxy = true
     MachineType = $ProxyMachineType
     SubnetId = ${IfThenElse(CloudProvider==="Azure", AzureSubnetId, AwsProxySubnetId)}

         [[[configuration]]]
         run_list = recipe[cganglia::server], recipe[kafka-client]

         cyclecloud.discoverable = true
        
         # Configure Azure external input endpoints (for example SSH)
         [[[input-endpoint SSH]]]
         PrivatePort = 22
         PublicPort = 22

         [[[input-endpoint ganglia]]]
         PrivatePort = 8652
         PublicPort = 8652        


    [[nodearray broker]]
    MachineType = $BrokerMachineType
    InitialCount = $EnsembleSize
    
    TagList = $BrokerGcpTagList


        [[[configuration]]]
        run_list = recipe[jdk], recipe[zookeeper::server], recipe[kafka]      

        cyclecloud.discoverable = true
        zookeeper.mode = ensemble
        zookeeper.ensemble_size = $EnsembleSize

        kafka.version = 0.10.1.0
        kafka.scala_version = 2.11
        kafka.checksum = 6d9532ae65c9c8126241e7b928b118aaa3a694dab08069471f0e61f4f0329390
        kafka.md5_checksum = 45c7d032324e16c2e19a7d904a4d65c6
        # Auto-assign the broker id (manual assignment allows range [0..1000]
        kafka.broker.id = -1
        kafka.broker.zookeeper.connect = localhost:2181
        kafka.broker.hostname = localhost
        kafka.broker.port = 9092
        kafka.init_style = systemd
        kafka.automatic_start = true
        kafka.automatic_restart = false
    
        # Configure Azure external input endpoints (for example SSH)
        [[[input-endpoint SSH]]]
        PrivatePort = 22
        PublicPort = 22

        [[[input-endpoint ganglia]]]
        PrivatePort = 8652
        PublicPort = 8652        

